

A -> B -> C -> 
          C.NEXT = HEAD = A 

 
A -> B -> C 
          C.NEXT = B


A -> B -> C -> D
               D.NEXT = B

               D.NEXT = null

    


A -> B -> C -> D



visited = []; 
let curr
while(curr){ 
    //check
    //check check === true return true; 
    //push
    //go up   
}
return false; 

                --------------
               |              |
G -> A -> B -> C -> D -> E -> F
                    c
                    a          

curr = head
advanced = curr.next.next // bounds check because, if curr.next == null, then there's no cycle


while (curr && advanced && advanced.next) 
    advanced = advanced.next.next
    curr = curr.next
    if (advanced = curr)
        return true

return false
